{"version":3,"sources":["components/GridItem,.js","components/Spinner.js","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["styles","margin","props","Grid","item","component","Card","xs","md","style","CardContent","Typography","color","gutterBottom","title","variant","end","header","duration","separator","Date","date","toDateString","body","size","loading","display","flexDirection","alignItems","Cards","data","confirmed","recovered","deaths","lastUpdate","container","spacing","justify","value","Spinner","url","fetchData","a","axios","get","fetchDailyData","map","reportDate","total","fetchCountries","countries","country","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","text","lineChart","borderColor","fill","className","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9964f0e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport {Card, CardContent, Grid, Typography} from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    margin: '0 2%'\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            style={styles}\r\n        >\r\n            <CardContent>\r\n                <Typography color={'textSecondary'} gutterBottom>\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography variant={'h5'}>\r\n                    <CountUp\r\n                        end={props.header}\r\n                        duration={2.5}\r\n                        separator={','}\r\n                    />\r\n                </Typography>\r\n                <Typography color={'textSecondary'}>\r\n                    {new Date(props.date).toDateString()}\r\n                </Typography>\r\n                <Typography variant={'body2'}>\r\n                    {props.body}\r\n                </Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n}","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nexport default function(props) {\r\n    return (\r\n        <ClipLoader\r\n            size={75}\r\n            color={\"#123abc\"}\r\n            loading={props}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core'\r\nimport GridItem from \"../GridItem,\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst styles = {\r\n    margin: '50px 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\r\n\r\n    return (\r\n        <div style={styles}>\r\n            <Grid container spacing={3} justify={'center'}>\r\n                {confirmed ?\r\n                    <GridItem\r\n                        title={'Infected'}\r\n                        header={confirmed.value}\r\n                        date={lastUpdate}\r\n                        body={'Number of active cases of COVID-19'}\r\n                    />\r\n                    :\r\n                    <Spinner />\r\n                }\r\n                {recovered ?\r\n                    <GridItem\r\n                        title={'Recovered'}\r\n                        header={recovered.value}\r\n                        date={lastUpdate}\r\n                        body={'Number of recoveries from COVID-19'}\r\n                    />\r\n                    :\r\n                    <Spinner />\r\n                }\r\n                {deaths ?\r\n                    <GridItem\r\n                        title={'Deaths'}\r\n                        header={deaths.value}\r\n                        date={lastUpdate}\r\n                        body={'Number of deaths from COVID-19'}\r\n                    />\r\n                    :\r\n                    <Spinner />\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url)\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    },\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n\r\n        this.setState({ data, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1zYn9\",\"image\":\"App_image__2ApYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3cKE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Ll_g\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}